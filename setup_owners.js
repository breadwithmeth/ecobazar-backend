const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function setupStoreOwners() {
  try {
    console.log('üè™ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤...\n');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π-–ø—Ä–æ–¥–∞–≤—Ü–æ–≤
    const seller2 = await prisma.user.create({
      data: {
        telegram_user_id: '347115155',
        name: '–°–µ—Ä–≥–µ–π2',
        role: 'SELLER'
      }
    });

    const seller3 = await prisma.user.create({
      data: {
        telegram_user_id: '347115156',
        name: '–°–µ—Ä–≥–µ–π3',
        role: 'SELLER'
      }
    });

    // –ù–∞–∑–Ω–∞—á–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –º–∞–≥–∞–∑–∏–Ω–∞–º
    await prisma.store.update({
      where: { id: 1 },
      data: { ownerId: seller2.id }
    });

    await prisma.store.update({
      where: { id: 2 },
      data: { ownerId: seller3.id }
    });

    console.log('‚úÖ –í–ª–∞–¥–µ–ª—å—Ü—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã:');
    console.log(`   –ú–∞–≥–∞–∑–∏–Ω #1 -> ${seller2.name} (${seller2.telegram_user_id})`);
    console.log(`   –ú–∞–≥–∞–∑–∏–Ω #2 -> ${seller3.name} (${seller3.telegram_user_id})`);
    console.log('   –ú–∞–≥–∞–∑–∏–Ω #4 -> –°–µ—Ä–≥–µ–π1 (347115154) - —É–∂–µ –±—ã–ª –Ω–∞–∑–Ω–∞—á–µ–Ω');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

setupStoreOwners();
